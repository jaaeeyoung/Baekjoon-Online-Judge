'''
===================================================================================================================================
문제
===================================================================================================================================
[3460] 이진수
===================================================================================================================================
시간 및 메모리 제한
===================================================================================================================================
# 시간 제한 : 1 초
# 메모리 제한 : 128 MB
===================================================================================================================================
문제 설명
===================================================================================================================================
# 양의 정수 n이 주어졌을 때, 이를 이진수로 나타냈을 때 1의 위치를 모두 찾는 프로그램을 작성하시오. 최하위 비트(least significant bit, 
  lsb)의 위치는 0이다.
===================================================================================================================================
입력
===================================================================================================================================
# 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, n이 주어진다. (1 ≤ T ≤ 10, 1 ≤ n ≤ 106)
===================================================================================================================================
출력
===================================================================================================================================
# 각 테스트 케이스에 대해서, 1의 위치를 공백으로 구분해서 줄 하나에 출력한다. 위치가 낮은 것부터 출력한다.
===================================================================================================================================
입출력 예
===================================================================================================================================
입력 1
1
13

출력 1
0 2 3
===================================================================================================================================
알고리즘 분류
===================================================================================================================================
# 수학
# 구현
===================================================================================================================================
Log
===================================================================================================================================
' 2022-02-17-THU : 문제 파악
                   문제 해결
===================================================================================================================================
'''

'''
Algorithm
1. 정수를 계속 2로 나누면서 나머지를 리스트에 저장
-> 몫이 0이 되면 break
2. 리스트 원소를 하나씩 확인하면서 1인 index 출력
'''

T = int(input())
for i in range(T):
    n = int(input())
    
    # 이진수로 변환된 비트들이 담길 List
    bits = []
    while True:
        # n을 2로 나눈 나머지 값을 bits에 추가
        bits.append(n%2)
        n //= 2 # n을 2로 나눔
        if n == 0: # n이 0이 되면 break
            break

    for j in range(len(bits)): # bits의 원소를 하나씩 확인하다가
        if bits[j] == 1: # 1일때의 index 값을 반환
            print(j, end = ' ')