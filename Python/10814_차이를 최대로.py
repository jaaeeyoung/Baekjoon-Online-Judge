'''
===================================================================================================================================
문제
===================================================================================================================================
[10814] 차이를 최대로
===================================================================================================================================
Log
===================================================================================================================================
' 2022-04-08 FRI : 문제 파악
                   6%에서 틀렸습니다
                   숫자를 추가하는 게 아닌 index를 기준으로 추가
                   문제 해결
===================================================================================================================================
'''
'''
Algorithm
Back Tracking 이용
1. stack에 포함되어있지 않은 index append
2. 재귀함수 호출
3. 재귀함수 return되면 pop
4. stack의 길이가 N이 되면 식의 최댓값 갱신
'''

def back_tracking():
    global answer
    
    # stack의 길이가 N이 되면 식의 최댓값 갱신
    if len(stack) == N:
        sum_ = 0
        for idx in range(1, N):
            sum_ += abs(nums[stack[idx-1]] - nums[stack[idx]])
        if answer < sum_:
            answer = sum_
    else:
        for index in range(N):
            if index not in stack:
                stack.append(index)
                back_tracking()
                stack.pop()
                
N = int(input())
nums = list(map(int, input().split()))

global answer
answer = 0
stack = []
back_tracking()
print(answer)