'''
===================================================================================================================================
문제
===================================================================================================================================
[11054] 가장 긴 바이토닉 부분 수열
===================================================================================================================================
Log
===================================================================================================================================
' 2022-06-01-WED : 문제 파악
                   틀렸습니다.
                   문제 해결
===================================================================================================================================
'''
'''
Algorithm
Dynamic Programming
1. 최장 증가수열 구하기
2. 최장 감소수열 구하기
3. 최장 증가수열 + 최장 감소수열의 최댓값 - 1 출력
'''

import sys
input = sys.stdin.readline

N = int(input())
A = [int(num) for num in input().split()]

lis = [1] * N # 최장 증가 수열
lds = [1] * N # 최장 감소 수열

# 최장 증가수열 구하기
for i in range(1, N):
    for j in range(i):
        if A[j] < A[i]:
            lis[i] = max(lis[i], lis[j] + 1)
            
# 최장 감소수열 구하기
A.reverse()
for i in range(1, N):
    for j in range(i):
        if A[j] < A[i]:
            lds[i] = max(lds[i], lds[j] + 1)

# lis와 lds의 합의 최댓값 - 1
lds.reverse()
dp = []
for idx in range(N):
    dp.append(lis[idx] + lds[idx])
print(max(dp) - 1)