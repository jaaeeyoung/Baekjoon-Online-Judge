'''
===================================================================================================================================
문제
===================================================================================================================================
[1874] 스택 수열
===================================================================================================================================
Log
===================================================================================================================================
' 2022-03-21-MON : 문제 파악
                   시간 초과
' 2022-03-23-WED : pop_list 대신 pop_dict 사용
                   23%에서 시간 초과
                   입력을 리스트에 따로 받지 말고 입력받는 즉시 동작하도록 수정
                   23%에서 시간 초과
                   다시 처음 알고리즘으로 돌아감 (pop_dict는 사용)
                   문제 해결
===================================================================================================================================
'''
'''
Algorithm
Stack 이용
1. 수열의 현재 숫자와 Stack의 마지막 값 비교
-> 수열의 현재 숫자까지 push()
-> 수열의 현재 숫자 == stack[-1]이면 pop()
-> 그외의 상황은 NO 출력
'''

import sys
input = sys.stdin.readline

n = int(input())
list_ = []
for _ in range(n):
    list_.append(int(input()))
    
pop_dict = {}
pop_dict = [False for _ in range(n+1)]

stack = []
flag = False # 불가능한 경우 True
answer = []
i = 0
num = 1
while i < len(list_):
    # stack 비어있으면 stack에 마지막으로 들어갔던 값 + 1 append
    if not stack:
        stack.append(num)
        
    for j in range(num, list_[i] + 1):
        # pop list에 없는 원소만 추가
        if not pop_dict[j]:
            stack.append(j)
            answer.append('+')
            num += 1

    if list_[i] == stack[-1]:
        pop_dict[stack[-1]] = True
        stack.pop()
        answer.append('-')
        i += 1
    else:
        flag = True
        break

# 출력
if flag:
    print('NO')
else:
    for i in answer:
        print(i)