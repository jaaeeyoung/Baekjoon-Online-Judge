'''
===================================================================================================================================
문제
===================================================================================================================================
[1931] 회의실 배정
===================================================================================================================================
Log
===================================================================================================================================
' 2022-02-15-TUE : 문제 파악
                   시간 초과
' 2022-03-04-FRI : 알고리즘 다시 짜야될 듯
' 2022-04-07 THU : 백트래킹을 이용한 알고리즘으로 구현
                   시간 초과
                   그리디로 구현
                   문제 해결
===================================================================================================================================
'''

'''
Algorithm
그리디
1. 리스트로 입력받아 끝나는 시간을 기준으로 오름차순 정렬
2. stack에 첫 번째 회의 추가
3. stack의 마지막 회의의 끝나는 시간보다 시작 시간이 크거나 같은 회의만 추가
4. stack의 길이 출력
'''

import sys
input = sys.stdin.readline
    
# 입력
N = int(input())
I = []
for _ in range(N):
    I.append(tuple(map(int, input().split())))
    
# 시작 시간, 회의 시간 순서대로 기준을 잡아 정렬
I.sort(key = lambda x: (x[1], x[0]))

# 회의 시작 시간이 이전 회의 끝나는 시간보다 크거나 같으면 추가
stack = [I[0]]
for index in range(1, N):
    if I[index][0] >= stack[-1][1]:
        stack.append(I[index])
print(len(stack))